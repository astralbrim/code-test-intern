{"version":3,"sources":["components/header.jsx","api.js","components/radioButtons.jsx","components/chart.jsx","components/App.js","index.js"],"names":["Header","className","BASE_URL","getPrefectureList","apiKey","axios","get","headers","getPopulationComposition","prefectureCode","RadioButtons","props","prefectureData","populationData","setPopulationData","map","d","index","prefName","type","data-prefname","data-key","onChange","e","targetKey","currentTarget","dataset","key","targetPrefName","prefname","target","checked","a","result","resultData","data","prefCode","tmpValue","value","tmpPrefName","name","filteredArray","filter","obj","handleRadioButtons","Chart","useState","options","setOptions","useEffect","title","text","subtitle","yAxis","xAxis","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","pointStart","pointInterval","responsive","rules","condition","maxWidth","chartOptions","highcharts","Highcharts","App","setPrefectureData","setApiKey","window","location","search","substring","catch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02751236.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n  <div className=\"header\">\n    <p>Test</p>\n  </div>\n);\n\nexport default Header;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://opendata.resas-portal.go.jp/api/v1';\n\nexport const getPrefectureList = (apiKey) => (\n  axios.get(\n    `${BASE_URL}/prefectures`,\n    {\n      headers: {\n        'X-API-KEY': apiKey,\n      },\n    },\n  )\n);\n\nexport const getPopulationComposition = (prefectureCode, apiKey) => (\n  axios.get(\n    `${BASE_URL}/population/composition/perYear?cityCode=-&prefCode=${prefectureCode}`,\n    {\n      headers: {\n        'X-API-KEY': apiKey,\n      },\n    },\n  )\n);\n","import React from 'react';\nimport { getPopulationComposition } from '../api';\n\nconst RadioButtons = (props) => {\n  const { // eslint-disable-next-line react/prop-types\n    prefectureData, populationData, setPopulationData, apiKey,\n  } = props;\n\n  const handleRadioButtons = (e) => {\n    const targetKey = e.currentTarget.dataset.key;\n    const targetPrefName = e.currentTarget.dataset.prefname;\n\n    if (e.target.checked === true) {\n      // チェックを入れたときの処理\n      const get = async () => {\n        const result = await getPopulationComposition(targetKey, apiKey);\n        const resultData = result.data.result.data[0];\n        resultData.data.prefCode = targetKey;\n        resultData.data.prefName = targetPrefName;\n        const tmpValue = resultData.data.map(\n          (value) => value.value,\n        );\n        const tmpPrefName = resultData.data.prefName;\n        // eslint-disable-next-line max-len\n        setPopulationData([...populationData, { name: tmpPrefName, data: tmpValue }]); // 配列の末尾にチェックが入った都道府県のデータを追加\n      };\n      get();\n    } else {\n      // チェックを外した時の処理\n      // eslint-disable-next-line react/prop-types\n      const filteredArray = populationData.filter(\n        (obj) => obj.name !== targetPrefName // targetName と prefName が一致している要素をfalseとして返す\n        ,\n      );\n\n      setPopulationData(filteredArray); // targetName と prefName が一致していない要素のみを残した新しい配列を格納\n    }\n  };\n  return (\n    <div className=\"checkboxes\">\n      {\n        // eslint-disable-next-line react/prop-types\n                prefectureData?.map(\n                  (d, index) => (\n                    <li>\n                      {d?.prefName}\n                      {' '}\n                      <input\n                        type=\"checkbox\"\n                        data-prefname={d?.prefName}\n                        data-key={index + 1}\n                        onChange={(e) => handleRadioButtons(e)}\n                      />\n                    </li>\n                  ),\n                )\n            }\n    </div>\n\n  );\n};\n\nexport default RadioButtons;\n","import React, { useState, useEffect } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nconst Chart = (props) => {\n  // eslint-disable-next-line react/prop-types\n  const { populationData } = props;\n  const creatOptions = (series) => ({\n    title: {\n      text: '人口構成のグラフ',\n    },\n\n    subtitle: {\n      text: 'Source: RESAS API',\n    },\n\n    yAxis: {\n      title: {\n        text: '人口',\n      },\n    },\n\n    xAxis: {\n      title: {\n        text: '年',\n      },\n    },\n\n    legend: {\n      layout: 'vertical',\n      align: 'right',\n      verticalAlign: 'middle',\n    },\n\n    plotOptions: {\n      series: {\n        label: {\n          connectorAllowed: false,\n        },\n        pointStart: 1960,\n        pointInterval: 5,\n      },\n    },\n\n    series,\n\n    responsive: {\n      rules: [{\n        condition: {\n          maxWidth: 500,\n        },\n        chartOptions: {\n          legend: {\n            layout: 'horizontal',\n            align: 'center',\n            verticalAlign: 'bottom',\n          },\n        },\n      }],\n    },\n  }\n\n  );\n  const [options, setOptions] = useState({});\n\n  // series に変化があったとき optionsを更新する\n  useEffect(\n    () => {\n      setOptions(creatOptions(populationData));\n    }, [populationData],\n  );\n  return (\n    <div className=\"chart\">\n      <HighchartsReact highcharts={Highcharts} options={options} />\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { useEffect, useState } from 'react';\nimport Header from './header';\nimport RadioButtons from './radioButtons';\nimport Chart from './chart';\nimport { getPrefectureList } from '../api';\nimport './App.css';\n\nfunction App() {\n  const [prefectureData, setPrefectureData] = useState([]);\n  const [populationData, setPopulationData] = useState([]);\n  const [apiKey, setApiKey] = useState('');\n\n  useEffect(\n    () => {\n      setApiKey(window.location.search.substring(1));\n    },\n    [],\n  );\n  useEffect(\n    () => {\n      const get = async () => {\n        const result = await getPrefectureList(apiKey);\n        setPrefectureData(result.data.result);\n      };\n      get().catch();\n    },\n    [apiKey],\n  );\n\n  return (\n  // eslint-disable-next-line react/jsx-filename-extension\n    <div className=\"App\">\n      <Header />\n      <RadioButtons\n        prefectureData={prefectureData}\n        populationData={populationData}\n        setPopulationData={setPopulationData}\n        apiKey={apiKey}\n      />\n      <Chart populationData={populationData} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}